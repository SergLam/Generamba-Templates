{% include 'header' %}

#import "{{ prefix }}{{ module_info.name }}ViewController+Routing.h"

#import "{{ prefix }}{{ module_info.name }}ViewController.h"
#import "{{ prefix }}{{ module_info.name }}Model.h"
#import "{{ prefix }}{{ module_info.name }}View.h"

@interface {{ prefix }}{{ module_info.name }}ViewController ()

@property (nonatomic, strong) {{ prefix }}{{ module_info.name }}Model *model;
@property (nonatomic, strong) {{ prefix }}{{ module_info.name }}View *view;

@end

@implementation {{ prefix }}{{ module_info.name }}ViewController

@dynamic view;

#pragma mark - Lifecycle

- (instancetype)initWithModel:({{ prefix }}{{ module_info.name }}Model *)model {
    self = [super init];
    if (self) {
        _model = model;
    }
    return self;
}

- (void)loadView {
    self.view = [[{{ prefix }}{{ module_info.name }}View alloc] init];
}

- (void)viewDidLoad {
	[super viewDidLoad];
	[self setupNavigationBar];
  [self setupInitialState];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
}

#pragma mark - Setup initial state

- (void)setupNavigationBar {
    self.navigationItem.title = @"{{ module_info.name }}";
}

- (void)setupInitialState {

}

#pragma mark - Private

@end
