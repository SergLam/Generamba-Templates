//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

#import "{{ prefix }}{{ module_info.name }}Presenter.h"

#import "{{ prefix }}{{ module_info.name }}ViewInput.h"
#import "{{ prefix }}{{ module_info.name }}InteractorInput.h"
#import "{{ prefix }}{{ module_info.name }}RouterInput.h"
#import "{{ prefix }}{{ module_info.name }}ViewModel.h"

@interface {{ prefix }}{{ module_info.name }}Presenter ()
@property (nonatomic, strong) {{ prefix }}{{ module_info.name }}ViewModel *viewModel;
@end

@implementation {{ prefix }}{{ module_info.name }}Presenter

#pragma mark - Методы {{ prefix }}{{ module_info.name }}ModuleInput

- (void)configureModule {
    // Стартовая конфигурация модуля, не привязанная к состоянию view
}

#pragma mark - Методы {{ prefix }}{{ module_info.name }}ViewOutput

- (void)didTriggerViewReadyEvent {
	{{ prefix }}{{ module_info.name }}ViewModel *viewModel = [{{ prefix }}{{ module_info.name }}ViewModel new];
	self.viewModel = viewModel;
	[self.view setupInitialState:self.viewModel];
}

#pragma mark - Методы {{ prefix }}{{ module_info.name }}InteractorOutput

@end